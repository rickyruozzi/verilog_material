$date
	Fri Oct 10 12:54:37 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module triFullAdder $end
$var wire 3 ! t_s [2:0] $end
$var wire 1 " t_cout $end
$var reg 3 # t_a [2:0] $end
$var reg 3 $ t_b [2:0] $end
$var reg 1 % t_cin $end
$scope module i_full_adder3 $end
$var wire 3 & a_i [2:0] $end
$var wire 3 ' b_i [2:0] $end
$var wire 1 % c_i $end
$var wire 3 ( s_o [2:0] $end
$var wire 1 " c_o $end
$var wire 1 ) c2 $end
$var wire 1 * c1 $end
$scope module fa0 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 % cin $end
$var wire 1 * cout $end
$var wire 1 - s $end
$var wire 1 . u1 $end
$var wire 1 / u2 $end
$var wire 1 0 u3 $end
$upscope $end
$scope module fa1 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 * cin $end
$var wire 1 ) cout $end
$var wire 1 3 s $end
$var wire 1 4 u1 $end
$var wire 1 5 u2 $end
$var wire 1 6 u3 $end
$upscope $end
$scope module fa2 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 ) cin $end
$var wire 1 " cout $end
$var wire 1 9 s $end
$var wire 1 : u1 $end
$var wire 1 ; u2 $end
$var wire 1 < u3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
b0 (
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#10
b1 !
b1 (
1-
1.
1,
b1 $
b1 '
#20
